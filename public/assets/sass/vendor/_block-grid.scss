/**
 * Block grid
 * Behaves like a .row
 */
[class*="block-grid-"] {
	display: block;
	margin: 0 (-($grid-gutter-width/2));
	padding: 0;
	list-style: none;
	@extend .clearfix;

	> li,
	> .block-grid-item {
		display: inline;
		margin: 0 0 ($grid-gutter-width/2);
		padding: 0 ($grid-gutter-width/2);
		height: auto;
		float: left;
		list-style: none;
	}
}

@mixin block-grid($per-row) {
	& > li,
	& > .block-grid-item {
		width: (100%/$per-row);

		&:nth-of-type(n) {
			clear: none;
		}

		&:nth-of-type(#{$per-row}n+1) {
			clear: both;
		}
	}
}

@each $size in xs, sm, md, lg {
	$min: $screen-xs-min;

	@if $size == xs {
		$min: 0;
	}
	@else if $size == sm {
		$min: $screen-sm-min;
	}
	@else if $size == md {
		$min: $screen-md-min;
	}
	@else if $size == lg {
		$min: $screen-lg-min;
	}

	@media (min-width: $min) {
		.block-grid-#{$size}-1  { @include block-grid(1);  }
		.block-grid-#{$size}-2  { @include block-grid(2);  }
		.block-grid-#{$size}-3  { @include block-grid(3);  }
		.block-grid-#{$size}-4  { @include block-grid(4);  }
		.block-grid-#{$size}-5  { @include block-grid(5);  }
		.block-grid-#{$size}-6  { @include block-grid(6);  }
		.block-grid-#{$size}-7  { @include block-grid(7);  }
		.block-grid-#{$size}-8  { @include block-grid(8);  }
		.block-grid-#{$size}-9  { @include block-grid(9);  }
		.block-grid-#{$size}-10 { @include block-grid(10); }
		.block-grid-#{$size}-11 { @include block-grid(11); }
		.block-grid-#{$size}-12 { @include block-grid(12); }
	}
}

/**
 * Column helpers
 */
.col-lg-3rds,
.col-md-3rds,
.col-sm-3rds,
.col-xs-3rds {
	@include make-lg-column(10);
}

@media(min-width: $screen-lg-min) {
	.col-lg-3rds {
		@include make-lg-column(3);
		width: 33.333% !important;
		float: left;
	}
}

@media(min-width: $screen-md-min) and (max-width: $screen-md-max) {
	.col-md-3rds {
		@include make-md-column(3);
		width: 33.333% !important;
		float: left;
	}
}

@media(min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
	.col-sm-3rds {
		@include make-sm-column(3);
		width: 33.333% !important;
		float: left;
	}
}

@media(min-width: $screen-xs-min) and (max-width: $screen-xs-max) {
	.col-xs-3rds {
		@include make-xs-column(3);
		width: 33.333% !important;
		float: left;
	}
}

.col-lg-4ths,
.col-md-4ths,
.col-sm-4ths,
.col-xs-4ths {
	@include make-lg-column(10);
}

@media(min-width: $screen-lg-min) {
	.col-lg-4ths {
		@include make-lg-column(4);
		width: 25% !important;
	}
}

@media(min-width: $screen-md-min) and (max-width: $screen-md-max) {
	.col-md-4ths {
		@include make-md-column(4);
		width: 25% !important;
	}
}

@media(min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
	.col-sm-4ths {
		@include make-sm-column(4);
		width: 25% !important;
	}
}

@media(min-width: $screen-xs-min) and (max-width: $screen-xs-max) {
	.col-xs-4ths {
		@include make-xs-column(4);
		width: 25% !important;
	}
}